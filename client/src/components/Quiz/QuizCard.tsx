// V4 (fropm V3) - Add results and showSummary states to display the quiz summary at the end of the quiz
import { Card } from '../../types/types';
import { useState, useEffect } from 'react';

const correctMessages = [
    "BINGO ! Tu g√®res ! üéØüî•",
    "Bravo ! On sent l‚Äôintelligence dans cette r√©ponse ! üß†‚ú®",
    "Jackpot ! √Ä ce rythme, tu vas battre le record ! üéâ",
    "Excellente r√©ponse ! M√™me Google est impressionn√©. üòé",
    "Correct ! Tu es un g√©nie en herbe ! üå±üî¨",
    "Wouah ! T‚Äôas vu cette pr√©cision ? C‚Äôest du grand art. üé®üëè",
    "T‚Äôas r√©pondu √ßa sans tricher ? Avoue ! üòè",
    "Encore un coup de ma√Ætre ! Tu vas finir par nous faire peur. üèÜ",
    "La classe ! Cette r√©ponse m√©rite un slow clap. üëèüëèüëè",
    "OUI ! √áa, c'est du talent pur ! üí°üî•",
    "Si j‚Äôavais un chapeau, je l‚Äôenl√®verais pour toi. üé©üé©",
    "Une r√©ponse parfaite, digne des plus grands ! üìöü•á",
    "Flash info : une l√©gende du quiz vient d‚Äôappara√Ætre ! üåü",
    "√âvidemment que tu as bon ! Trop facile pour toi, non ? üòú",
    "BOUM ! Encore une victoire √©clatante ! üí•üéä"
];

const wrongMessages = [
    "Oups... c'√©tait pas √ßa ! On va dire que c'√©tait un test de r√©flexes üòÜ",
    "Hmm... proche, mais pas encore ! Tente encore ! ü§î",
    "Bon, c‚Äô√©tait une r√©ponse artistique, mais pas la bonne ! üòÇ",
    "Ah... on sent l‚Äôeffort ! Mais c‚Äôest non. üò¨",
    "T'inqui√®te, m√™me Einstein s'est d√©j√† tromp√©... enfin, peut-√™tre. ü§ì",
    "Pas loin ! Encore un petit effort ! üöÄ",
    "Ah, √ßa sent la d√©connexion du cerveau l√†... üß†üí®",
    "Ne t‚Äôinqui√®te pas, m√™me les pros se trompent... enfin, rarement. üòú",
    "Faux ! Mais au moins, tu tentes des choses. üòÜ",
    "On applaudit ton courage, mais pas ta r√©ponse. üëèüòÖ",
    "C‚Äôest pas grave, c‚Äô√©tait une question-pi√®ge... ou pas. ü§≠",
    "√áa commence par la bonne lettre, mais c‚Äôest pas √ßa. üòÇ",
    "Oups, c'√©tait une tentative int√©ressante... mais rat√©e. ü§∑",
    "On va dire que c‚Äôest la faute du clavier, non ? ‚å®Ô∏èüòÖ",
    "Mauvaise r√©ponse ! Mais belle tentative... enfin presque. ü§°"
];

const QuizCard = ({ card, onAnswer }: {
    card: Card;
    onAnswer: (isValid: boolean) => void;
}) => {
    const [userAnswer, setUserAnswer] = useState('');
    const [showSolution, setShowSolution] = useState(false);
    const [isCorrect, setIsCorrect] = useState(false);
    const [selectedMessage, setSelectedMessage] = useState('');

    useEffect(() => {
        setShowSolution(false);
        setUserAnswer('');
        setIsCorrect(false);
        setSelectedMessage('');
    }, [card]);

    const checkAnswer = () => {
        const isAnswerCorrect = userAnswer.trim().toLowerCase() === card.answer.toLowerCase();
        setIsCorrect(isAnswerCorrect);
        setSelectedMessage(
            isAnswerCorrect
                ? correctMessages[Math.floor(Math.random() * correctMessages.length)]
                : wrongMessages[Math.floor(Math.random() * wrongMessages.length)]
        );
        setShowSolution(true);
    };

    return (
        <div className="quiz-card">
            <div className="question-section">
                <h2>{card.question}</h2>

                {!showSolution ? (
                    <>
            <textarea
                value={userAnswer}
                onChange={(e) => setUserAnswer(e.target.value)}
                placeholder="√âcrivez votre r√©ponse ici..."
                key={card.id}
            />
                        <button
                            onClick={checkAnswer}
                            className="check-answer"
                            disabled={!userAnswer.trim()}
                        >
                            V√©rifier la r√©ponse
                        </button>
                    </>
                ) : (
                    <div className="solution-section">
                        <div className="feedback-message">
                            {selectedMessage}
                        </div>

                        <div className="answer-comparison">
                            <h3>Votre r√©ponse :</h3>
                            <p>{userAnswer || "(Aucune r√©ponse fournie)"}</p>

                            <h3>R√©ponse correcte :</h3>
                            <p>{card.answer}</p>
                        </div>

                        <div className="quiz-controls">
                            {!isCorrect && (
                                <button
                                    onClick={() => {
                                        onAnswer(true);
                                        setShowSolution(false);
                                    }}
                                    className="validate-correct"
                                >
                                    ‚úÖ Ma r√©ponse √©tait correcte
                                </button>
                            )}

                            <button
                                onClick={() => {
                                    onAnswer(isCorrect);
                                    setShowSolution(false);
                                }}
                                className={`next-question ${isCorrect ? 'correct' : ''}`}
                            >
                                {isCorrect ? '‚û°Ô∏è Question suivante' : '‚ùå Question suivante'}
                            </button>
                        </div>
                    </div>
                )}
            </div>
        </div>
    );
};

export default QuizCard;